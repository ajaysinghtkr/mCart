{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuardService {\n  constructor(router) {\n    this.router = router;\n  }\n  // Products page will be displayed only if user logs in\n  canActivate() {\n    if (sessionStorage.getItem('isLoggedIn') === 'true') {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\nAuthGuardService.ɵfac = function AuthGuardService_Factory(t) {\n  return new (t || AuthGuardService)(i0.ɵɵinject(i1.Router));\n};\nAuthGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuardService,\n  factory: AuthGuardService.ɵfac\n});","map":{"version":3,"names":["AuthGuardService","constructor","router","canActivate","sessionStorage","getItem","navigate","i0","ɵɵinject","i1","Router","factory","ɵfac"],"sources":["C:\\Users\\tnikitha.surendra\\Downloads\\Ang13_BS5_mCart\\src\\app\\products\\auth-guard.service.ts"],"sourcesContent":["// route guard implementation for Products page\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuardService  {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  // Products page will be displayed only if user logs in\r\n  canActivate() {\r\n    if (sessionStorage.getItem('isLoggedIn') === 'true') {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;AAMA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAY;EAEtC;EACAC,WAAWA,CAAA;IACT,IAAIC,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM,EAAE;MACnD,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;;AAZWN,gBAAgB,C;mBAAhBA,gBAAgB,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AAAhBV,gBAAgB,C;SAAhBA,gBAAgB;EAAAW,OAAA,EAAhBX,gBAAgB,CAAAY;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}