{"ast":null,"code":"import { UntypedFormGroup, Validators } from '@angular/forms';\nimport { Login } from './Login';\nimport { LoginService } from './login.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./login.service\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = [\"uname\"];\nfunction LoginComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1, \"UserName is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_13_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginForm.controls.userName.errors == null ? null : ctx_r1.loginForm.controls.userName.errors.required);\n  }\n}\nfunction LoginComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1, \"Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_19_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loginForm.controls.password.errors == null ? null : ctx_r2.loginForm.controls.password.errors.required);\n  }\n}\nfunction LoginComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \"Invalid Credentials...Please try again...\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"valid\": a0,\n    \"invalid\": a1\n  };\n};\nconst _c2 = function () {\n  return [\"/welcome\"];\n};\nexport class LoginComponent {\n  constructor(router, formBuilder, loginService, renderer) {\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.loginService = loginService;\n    this.renderer = renderer;\n    this.login = new Login();\n    this.users = [];\n    this.valid = true;\n    this.isLoggedIn = 'false';\n    this.loginForm = new UntypedFormGroup({});\n  }\n  ngOnInit() {\n    // Makes a service call to fetch users data from backend\n    this.loginService.getUsers().subscribe(users => this.users = users);\n    this.loginForm = this.formBuilder.group({\n      userName: [this.login.userName, Validators.required],\n      password: [this.login.password, Validators.required]\n    });\n  }\n  // Invoked when user clicks submit in login form\n  // Validates the credentials with the fetched data from the database\n  onSubmit() {\n    this.valid = true;\n    // const name = this.loginForm.get('userName')?.value;\n    //fetches the form object with key as name of the control and value as the form control's value\n    this.login = this.loginForm.getRawValue();\n    const name = this.login.userName;\n    this.loginService.username = this.login.userName;\n    console.log(\"login service uname: \", this.loginService.username);\n    // sessionStorage.setItem('username', this.login.userName);\n    const password = this.login.password;\n    const user = this.users.filter(currUser => currUser.userName === name && currUser.password === password)[0];\n    if (user) {\n      this.isLoggedIn = 'true';\n      sessionStorage.setItem('isLoggedIn', this.isLoggedIn);\n      this.router.navigate(['/products']);\n    } else {\n      this.isLoggedIn = 'false';\n      sessionStorage.setItem('isLoggedIn', this.isLoggedIn);\n      this.valid = false;\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.LoginService), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"ng-component\"]],\n  viewQuery: function LoginComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.usernameElement = _t.first);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([LoginService])],\n  decls: 30,\n  vars: 15,\n  consts: [[1, \"container\", \"container-styles\"], [1, \"col-xs-7\", \"offset-xs-3\"], [1, \"card\", \"card-primary\"], [1, \"card-header\", \"text-white\", \"bg-primary\", \"mb-3\"], [1, \"card-block\", \"padding\"], [1, \"row\", 3, \"formGroup\"], [1, \"row\", \"mb-3\"], [\"for\", \"name\", 1, \"col-sm-3\", \"fw-bold\", \"form-label\", 2, \"text-align\", \"left\"], [1, \"col-sm-9\"], [\"type\", \"text\", \"formControlName\", \"userName\", 1, \"form-control\", 3, \"ngClass\"], [\"uname\", \"\"], [4, \"ngIf\"], [\"for\", \"password\", 1, \"col-sm-3\", \"fw-bold\", \"pl-6\", \"form-label\", 2, \"text-align\", \"left\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"row\"], [1, \"col\"], [1, \"col\", 2, \"margin-top\", \"20px\", \"margin-left\", \"10%\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"col\", 2, \"margin-top\", \"28px\", \"margin-right\", \"30%\"], [2, \"color\", \"#337ab7\", \"text-decoration\", \"underline\", 3, \"routerLink\"], [\"style\", \"color:red\", 4, \"ngIf\"], [2, \"color\", \"red\"], [1, \"error\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵtext(4, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"form\", 5)(7, \"div\", 6)(8, \"label\", 7);\n      i0.ɵɵtext(9, \"User Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 8);\n      i0.ɵɵelement(11, \"input\", 9, 10);\n      i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 2, 1, \"div\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 6)(15, \"label\", 12);\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 8);\n      i0.ɵɵelement(18, \"input\", 13);\n      i0.ɵɵtemplate(19, LoginComponent_div_19_Template, 2, 1, \"div\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(20, LoginComponent_div_20_Template, 2, 0, \"div\", 14);\n      i0.ɵɵelement(21, \"br\");\n      i0.ɵɵelementStart(22, \"div\", 15);\n      i0.ɵɵelement(23, \"span\", 16);\n      i0.ɵɵelementStart(24, \"div\", 17)(25, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_25_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(26, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"span\", 19)(28, \"a\", 20);\n      i0.ɵɵtext(29, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(8, _c1, ctx.loginForm.controls.userName.valid, ctx.loginForm.controls.userName.invalid && !ctx.loginForm.controls.userName.pristine));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls.password.errors && ctx.loginForm.controls.userName.dirty);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(11, _c1, ctx.loginForm.controls.password.valid, ctx.loginForm.controls.password.invalid && !ctx.loginForm.controls.password.pristine));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls.password.errors && ctx.loginForm.controls.password.dirty);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.valid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(14, _c2));\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i1.RouterLink],\n  styles: [\".container-styles[_ngcontent-%COMP%]{\\n\\tposition: relative; \\n\\ttop: 100px;\\n\\twidth:40%\\n}\\n\\n.padding[_ngcontent-%COMP%]{\\n  padding-left: 5%;\\n  padding-bottom: 2%;\\n}\\n\\n.link-underline[_ngcontent-%COMP%]{\\n   color:#337ab7;\\n    text-decoration: underline;\\n}\\n\\n.error[_ngcontent-%COMP%]{\\n    color: red;\\n    position:relative;\\n    left:95px;\\n}\\n\\n.valid[_ngcontent-%COMP%] {\\n\\tborder-left: 5px solid #42A948; \\n\\n}\\n\\n.invalid[_ngcontent-%COMP%]{\\n\\tborder-left: 5px solid #a94442; \\n\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGtCQUFrQjtDQUNsQixVQUFVO0NBQ1Y7QUFDRDs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixrQkFBa0I7QUFDcEI7O0FBRUE7R0FDRyxhQUFhO0lBQ1osMEJBQTBCO0FBQzlCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLGlCQUFpQjtJQUNqQixTQUFTO0FBQ2I7O0FBRUE7Q0FDQyw4QkFBOEIsRUFBRSxVQUFVO0FBQzNDOztBQUVBO0NBQ0MsOEJBQThCLEVBQUUsUUFBUTtBQUN6QyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXItc3R5bGVze1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTsgXHJcblx0dG9wOiAxMDBweDtcclxuXHR3aWR0aDo0MCVcclxufVxyXG5cclxuLnBhZGRpbmd7XHJcbiAgcGFkZGluZy1sZWZ0OiA1JTtcclxuICBwYWRkaW5nLWJvdHRvbTogMiU7XHJcbn1cclxuXHJcbi5saW5rLXVuZGVybGluZXtcclxuICAgY29sb3I6IzMzN2FiNztcclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG59XHJcblxyXG4uZXJyb3J7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgcG9zaXRpb246cmVsYXRpdmU7XHJcbiAgICBsZWZ0Ojk1cHg7XHJcbn1cclxuXHJcbi52YWxpZCB7XHJcblx0Ym9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjNDJBOTQ4OyAvKiBncmVlbiAqL1xyXG59XHJcblxyXG4uaW52YWxpZHtcclxuXHRib3JkZXItbGVmdDogNXB4IHNvbGlkICNhOTQ0NDI7IC8qIHJlZCAqL1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["UntypedFormGroup","Validators","Login","LoginService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_13_div_1_Template","ɵɵadvance","ɵɵproperty","ctx_r1","loginForm","controls","userName","errors","required","LoginComponent_div_19_div_1_Template","ctx_r2","password","LoginComponent","constructor","router","formBuilder","loginService","renderer","login","users","valid","isLoggedIn","ngOnInit","getUsers","subscribe","group","onSubmit","getRawValue","name","username","console","log","user","filter","currUser","sessionStorage","setItem","navigate","ɵɵdirectiveInject","i1","Router","i2","UntypedFormBuilder","i3","Renderer2","selectors","viewQuery","LoginComponent_Query","rf","ctx","decls","vars","consts","template","LoginComponent_Template","ɵɵelement","LoginComponent_div_13_Template","LoginComponent_div_19_Template","LoginComponent_div_20_Template","ɵɵlistener","LoginComponent_Template_button_click_25_listener","ɵɵpureFunction2","_c1","invalid","pristine","dirty","ɵɵpureFunction0","_c2"],"sources":["C:\\Users\\tnikitha.surendra\\Pictures\\Ang16_BS5_mCart\\src\\app\\login\\login.component.ts","C:\\Users\\tnikitha.surendra\\Pictures\\Ang16_BS5_mCart\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, Renderer2, ViewChild } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Login } from './Login';\r\nimport { LoginService } from './login.service';\r\n\r\n@Component({\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css'],\r\n    providers: [LoginService]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    login = new Login();\r\n\r\n    users: Login[] = [];\r\n    valid = true;\r\n    isLoggedIn = 'false';\r\n    @ViewChild('uname') usernameElement!: ElementRef;\r\n\r\n    loginEl!: ElementRef;\r\n\r\n    loginForm: UntypedFormGroup = new UntypedFormGroup({});\r\n\r\n    constructor(private router: Router, private formBuilder: UntypedFormBuilder,\r\n        private loginService: LoginService, private renderer: Renderer2) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        // Makes a service call to fetch users data from backend\r\n        this.loginService.getUsers()\r\n            .subscribe(users => this.users = users);\r\n        this.loginForm = this.formBuilder.group({\r\n            userName: [this.login.userName, Validators.required],\r\n            password: [this.login.password, Validators.required]\r\n        })\r\n    }\r\n\r\n    // Invoked when user clicks submit in login form\r\n    // Validates the credentials with the fetched data from the database\r\n    onSubmit() {\r\n        this.valid = true;\r\n        // const name = this.loginForm.get('userName')?.value;\r\n        //fetches the form object with key as name of the control and value as the form control's value\r\n        this.login = this.loginForm.getRawValue();\r\n        const name = this.login.userName;\r\n        this.loginService.username = this.login.userName;\r\n        console.log(\"login service uname: \", this.loginService.username);\r\n        // sessionStorage.setItem('username', this.login.userName);\r\n\r\n        const password = this.login.password;\r\n        const user = this.users.filter(currUser => currUser.userName === name && currUser.password === password)[0];\r\n        if (user) {\r\n            this.isLoggedIn = 'true';\r\n            sessionStorage.setItem('isLoggedIn', this.isLoggedIn);\r\n\r\n            this.router.navigate(['/products']);\r\n        } else {\r\n            this.isLoggedIn = 'false';\r\n            sessionStorage.setItem('isLoggedIn', this.isLoggedIn);\r\n            this.valid = false;\r\n        }\r\n    }\r\n}\r\n","<!-- Login form created as a template driven form -->\r\n<div class=\"container container-styles\">\r\n\t<div class=\"col-xs-7 offset-xs-3\">\r\n\t\t<div class=\"card card-primary\">\r\n\t\t\t<div class=\"card-header text-white bg-primary mb-3\">Login</div>\r\n\t\t\t<div class=\"card-block padding\">\r\n\t\t\t\t<form class=\"row\" [formGroup]=\"loginForm\">\r\n\t\t\t\t\t<div class=\"row mb-3\">\r\n\t\t\t\t\t\t<label for=\"name\" class=\"col-sm-3 fw-bold form-label\" style=\"text-align:left\">User Name</label>\r\n\t\t\t\t\t\t<div class=\"col-sm-9\">\r\n\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" [ngClass]=\"{'valid':loginForm.controls.userName.valid, 'invalid':loginForm.controls.userName.invalid && !loginForm.controls.userName.pristine}\" formControlName=\"userName\" #uname>\r\n\t\t\t\t\t\t\t<div *ngIf=\"loginForm.controls.password.errors && loginForm.controls.userName.dirty\">\r\n\t\t\t\t\t\t\t<div *ngIf=\"loginForm.controls.userName.errors?.required\" style=\"color:red\">UserName is required\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"row mb-3\">\r\n\t\t\t\t\t\t<label for=\"password\" class=\"col-sm-3 fw-bold pl-6 form-label\" style=\"text-align:left\">Password</label>\r\n\t\t\t\t\t\t<div class=\"col-sm-9\">\r\n\t\t\t\t\t\t\t<input type=\"password\" class=\"form-control\" [ngClass]=\"{'valid':loginForm.controls.password.valid, 'invalid':loginForm.controls.password.invalid && !loginForm.controls.password.pristine}\" formControlName=\"password\">\r\n\t\t\t\t\t\t\t<div *ngIf=\"loginForm.controls.password.errors && loginForm.controls.password.dirty\">\r\n\t\t\t\t\t\t\t<div *ngIf=\"loginForm.controls.password.errors?.required\" style=\"color:red\">Password is required\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div *ngIf=\"!valid\" class=\"error\">Invalid Credentials...Please try again...</div>\r\n\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<span class=\"col\"></span>\r\n\t\t\t\t\t\t<div class=\"col\" style=\"margin-top:20px;margin-left: 10%;\">\r\n\t\t\t\t\t\t\t<button (click)=\"onSubmit()\" class=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t\t[disabled]=\"!loginForm.valid\">Login</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span class=\"col\" style=\"margin-top:28px; margin-right: 30%;\">\r\n\t\t\t\t\t\t\t<a [routerLink]=\"['/welcome']\" style=\"color:#337ab7;text-decoration: underline;\">Cancel</a>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}