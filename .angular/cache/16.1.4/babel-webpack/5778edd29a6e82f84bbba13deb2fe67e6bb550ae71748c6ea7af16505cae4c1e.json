{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    this.username = '';\n  }\n  // Makes a get request to the backend to fetch users data\n  getUsers() {\n    return this.http.get('./assets/users/users.json').pipe(catchError(this.handleError));\n  }\n  // Invoked if an error is thrown in the get request\n  handleError(err) {\n    console.error(err);\n    return throwError(err.error() || 'Server error');\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["throwError","catchError","LoginService","constructor","http","username","getUsers","get","pipe","handleError","err","console","error","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\tnikitha.surendra\\Downloads\\Ang13_BS5_mCart\\src\\app\\login\\login.service.ts"],"sourcesContent":["import { ElementRef, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { Login } from './Login';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n    username = '';\r\n    loginElement!: ElementRef;\r\n    welcomeElement!: ElementRef;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    // Makes a get request to the backend to fetch users data\r\n    getUsers(): Observable<Login[]> {\r\n        return this.http.get<Login[]>('./assets/users/users.json').pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    // Invoked if an error is thrown in the get request\r\n    private handleError(err: HttpErrorResponse) {\r\n        console.error(err);\r\n        return throwError(err.error() || 'Server error');\r\n    }\r\n}\r\n"],"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;;AAO3C,OAAM,MAAOC,YAAY;EAKrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJxB,KAAAC,QAAQ,GAAG,EAAE;EAI2B;EAExC;EACAC,QAAQA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,2BAA2B,CAAC,CAACC,IAAI,CAC3DP,UAAU,CAAC,IAAI,CAACQ,WAAW,CAAC,CAAC;EACrC;EAEA;EACQA,WAAWA,CAACC,GAAsB;IACtCC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClB,OAAOV,UAAU,CAACU,GAAG,CAACE,KAAK,EAAE,IAAI,cAAc,CAAC;EACpD;;AAjBSV,YAAY,C;mBAAZA,YAAY,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZd,YAAY,C;SAAZA,YAAY;EAAAe,OAAA,EAAZf,YAAY,CAAAgB,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}